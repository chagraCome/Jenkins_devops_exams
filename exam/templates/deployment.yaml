apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-movie-db
  labels:
    app: {{ .Release.Name }}-movie-db
spec:
  replicas: {{ .Values.movieDb.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-movie-db
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-movie-db
    spec:
      containers:
        - name: {{ .Release.Name }}-movie-db
          image: "{{ .Values.movieDb.image.repository }}:{{ .Values.movieDb.image.tag | default .Chart.AppVersion }}"
          env:
            - name: POSTGRES_USER
              value: movie_db_username
            - name: POSTGRES_PASSWORD
              value: movie_db_password
            - name: POSTGRES_DB
              value: movie_db_dev
          ports:
            - name: postgres
              containerPort: {{ .Values.movieDb.service.port }}
              protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-movie-service
  labels:
    app: {{ .Release.Name }}-movie-service
spec:
  replicas: {{ .Values.movieService.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-movie-service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-movie-service
    spec:
      containers:
        - name: {{ .Release.Name }}-movie-service
          image: "{{ .Values.movieService.image.repository }}:{{ .Values.movieService.image.tag | default .Chart.AppVersion }}"
          command: [{{ .Values.movieService.image.command }}]
          args: {{ .Values.movieService.image.arg }}
          ports:
            - name: http
              containerPort: {{ .Values.movieService.service.port }}
              protocol: TCP
          env:
            - name: {{ .Values.movieService.env.envName1 }}
              value: {{ .Values.movieService.env.envValue1 }}
            - name: {{ .Values.movieService.env.envName2 }}
              value: {{ .Values.movieService.env.envValue2 }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cast-db
  labels:
    app: {{ .Release.Name }}-cast-db
spec:
  replicas: {{ .Values.castDb.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cast-db
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cast-db
    spec:
      containers:
        - name: {{ .Release.Name }}-cast-db
          image: "{{ .Values.castDb.image.repository }}:{{ .Values.castDb.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: {{ .Values.castDb.service.port }} 
              protocol: TCP
          env:
            - name: {{ .Values.castDb.env.POSTGRES_USER }}
              value: {{ .Values.castDb.env.POSTGRES_USER_value}}
            - name: {{ .Values.castDb.env.POSTGRES_PASSWORD }}
              value: {{ .Values.castDb.env.POSTGRES_PASSWORD_value }}
            - name: {{ .Values.castDb.env.POSTGRES_DB }}
              value: {{ .Values.castDb.env.POSTGRES_DB_value }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cast-service
  labels:
    app: {{ .Release.Name }}-cast-service
spec:
  replicas: {{ .Values.castService.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cast-service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cast-service
    spec:
      containers:
        - name: {{ .Release.Name }}-cast-service
          image: "{{ .Values.castService.image.repository }}:{{ .Values.castService.image.tag | default .Chart.AppVersion }}"
          command: [{{ .Values.castService.command }}]
          args: {{ .Values.castService.image.arg }}
          ports:
            - name: http
              containerPort: {{ .Values.castService.service.port }}
              protocol: TCP
          env:
            - name: {{ .Values.castService.env.envName1 }}
              value: {{ .Values.castService.env.envValue1 }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    app: {{ .Release.Name }}-nginx
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-nginx
    spec:
      containers:
        - name: {{ .Release.Name }}-nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: {{ .Values.nginx.service.port }}
              protocol: TCP