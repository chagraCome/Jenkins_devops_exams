apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-movie-db
  labels:
    app: {{ .Release.Name }}-movie-db
spec:
  replicas: {{ .Values.movie-db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-movie-db
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-movie-db
    spec:
      containers:
        - name: {{ .Release.Name }}-movie-db
          image: "{{ .Values.movie-db.image.repository }}:{{ .Values.movie-db.image.tag | default .Chart.AppVersion }}"
          env:
          - name: {{ .Values.movie-db.env.POSTGRES_USER }}
            value: {{ .Values.movie-db.env.POSTGRES_USER_value}}
          - name: {{ .Values.movie-db.env.POSTGRES_PASSWORD }}
            value: {{ .Values.movie-db.env.POSTGRES_PASSWORD_value }}
          - name: {{ .Values.movie-db.env.POSTGRES_DB }}
            value: {{ .Values.movie-db.env.POSTGRES_DB_value }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-movie_service
  labels:
    app: {{ .Release.Name }}-movie_service
spec:
  replicas: {{ .Values.movie_service.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-movie_service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-movie_service
    spec:
      containers:
        - name:     {{ .Release.Name }}-movie_service
          image: "{{ .Values.movie_service.image.repository }}:{{ .Values.movie_service.image.tag | default .Chart.AppVersion }}"
          command: [{{ .Values.movie_service.image.command }}]
          args: {{ .Values.movie_service.image.arg }}
          ports:
            - name: http
              containerPort: {{ .Values.movie_service.service.port }}
              protocol: TCP
          env:
          - name: {{ .Values.movie_service.env.envName1 }}
            value: {{ .Values.movie_service.env.envValue1 }}
          - name: {{ .Values.movie_service.env.envName2 }}
            value: {{ .Values.movie_service.env.envValue2 }}
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cast_db
  labels:
    app: {{ .Release.Name }}-cast_db
spec:
  replicas: {{ .Values.cast_db.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cast_db
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cast_db
    spec:
      containers:
        - name: {{ .Release.Name }}-cast_db
          image: "{{ .Values.cast_db.image.repository }}:{{ .Values.cast_db.image.tag | default .Chart.AppVersion }}"
          ports:
          env:
          - name: {{ .Values.cast_db.env.POSTGRES_USER }}
            value: {{ .Values.cast_db.env.POSTGRES_USER_value}}
          - name: {{ .Values.cast_db.env.POSTGRES_PASSWORD }}
            value: {{ .Values.cast_db.env.POSTGRES_PASSWORD_value }}
          - name: {{ .Values.cast_db.env.POSTGRES_DB }}
            value: {{ .Values.cast_db.env.POSTGRES_DB_value }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cast_service
  labels:
    app: {{ .Release.Name }}-cast_service
spec:
  replicas: {{ .Values.cast_service.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-cast_service
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-cast_service
    spec:
      containers:
        - name:     {{ .Release.Name }}-cast_service
          image: "{{ .Values.cast_service.image.repository }}:{{ .Values.cast_service.image.tag | default .Chart.AppVersion }}"
          command: [{{ .Values.cast_service.command }}]
          args: {{ .Values.cast_service.image.arg }}
          ports:
            - name: http
              containerPort: {{ .Values.cast_service.service.port }}
              protocol: TCP
          env:
          - name: {{ .Values.cast_service.env.envName1 }}
            value: {{ .Values.cast_service.env.envValue1 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    app: {{ .Release.Name }}-nginx
spec:
  replicas: {{ .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-nginx
    spec:
      containers:
        - name:     {{ .Release.Name }}-nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag | default .Chart.AppVersion }}"
          ports:
              containerPort: {{ .Values.nginx.service.port }}
          